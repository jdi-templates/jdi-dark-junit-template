buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
}

plugins {
    id 'java'
    id("io.qameta.allure") version "2.7.0"
}
description = "JDI Dark Gradle JUnit example"
group = "com.epam.jdi"
version = version

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

configurations {
    testCompile
}

allure {
autoconfigure = true
    version = '2.9.0'

    useJUnit5 {
        version = '2.9.0'
    }
}

dependencies {
    implementation("org.junit.jupiter:junit-jupiter-api:5.9.1")
    testRuntimeOnly(
            'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    )
    implementation group: 'com.epam.jdi', name: 'jdi-dark', version: '1.1.11'
    testImplementation group: 'org.slf4j', name: 'slf4j-nop', version: '2.0.3'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-1.2-api', version: '2.19.0'
    testImplementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: '2.19.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.19.0'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.19.0'
}

def env = project.hasProperty("BUILD_PROFILE") ? project.getProperty("BUILD_PROFILE") :
        System.getProperty("BUILD_PROFILE") ? System.getProperty("BUILD_PROFILE") : System.getenv("BUILD_PROFILE")
processTestResources {
    expand([
            profile: env == null ? '${profile}' : env
    ])
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}